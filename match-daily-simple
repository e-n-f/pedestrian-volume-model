#!/usr/bin/perl

$pi = 4 * atan2(1, 1);
$foot = .00000274;
$bucket = 5280 * $foot;

$theradius = 1000;

srand(0);

sub rnd {
        my ($mean, $stddev) = @_;

        if (0 && $haveSpare) {
                $haveSpare = 0;
                return ($stddev * sqrt($rand1) * sin($rand2)) + $mean;
        }

        $haveSpare = 1;

        $rand1 = rand(1);
        if ($rand1 < 1e-100) {
                $rand1 = 1e-100;
        }
        $rand1 = -2 * log($rand1);
        $rand2 = rand(1) * $pi * 2;

        return ($stddev * sqrt($rand1) * cos($rand2)) + $mean;
}

$| = 1;

open(IN, "../traffic/daily-traffic-counts/daily/daily.csv");
while (<IN>) {
	chomp;
	($id, $name, $id2, $date, $time, @fields) = split(/,/);
	# next if /extrap/;
	next if $fields[20] eq "";

	$accuracy = 0;
	if (/daily-accuracy:(.*),/) {
		$accuracy = log($1);
	}

	$lat = $fields[20];
	$lon = $fields[21];
	$walk = $fields[12] + $fields[13] + $fields[14] + $fields[15];

	$ns = $fields[1] + $fields[7];
	$ew = $fields[4] + $fields[10];

	$drive = $ns + $ew;

	if ($drive == 0) {
		$major = 0;
		$minor = 0;
		$split = 0.75;
	} elsif ($ns > $ew) {
		$major = $ns;
		$minor = $ew;
		$split = $ns / $drive;
	} else {
		$major = $ew;
		$minor = $ns;
		$split = $ew / $drive;
	}

	if ($walk != 0) {
		$walk{"$lat,$lon"} += log($walk);
		$name{"$lat,$lon"} = $name;
		$walkcount{"$lat,$lon"} += 1;

		$a = int($lat / $bucket);
		$o = int($lon / $bucket);

		push @{$near{$a}{$o}}, "$lat,$lon";
	}

	$split{"$lat,$lon"} = $split;
	$drive{"$lat,$lon"} = $drive;
	$major{"$lat,$lon"} = $major;
	$minor{"$lat,$lon"} = $minor;
	srand($walk + $lat + $lon);
	$fuzz{"$lat,$lon"} = $walk * exp(rnd(0, $accuracy));
}
close(IN);

# geometric mean if there are multiple reports for same location
for $w (keys(%walk)) {
	$walk{$w} = exp($walk{$w} / $walkcount{$w});
}

open(IN, "gzip -dc all-employment-2012.gz |");
while (<IN>) {
	chomp;
	@fields = split(/,/);

	($lat, $lon) = ($fields[53], $fields[54]);

	$a = int($lat / $bucket);
	$o = int($lon / $bucket);

	@candidates = ();
	for ($aa = $a - 1; $aa <= $a + 1; $aa++) {
		for ($oo = $o - 1; $oo <= $o + 1; $oo++) {
			push @candidates, @{$near{$aa}{$oo}};
		}
	}

	if ($seq++ % 10000 == 0) {
		printf STDERR ("%.2f\r", $seq / 6595711 * 100);
	}

	if ($#candidates >= 0) {
		$rat = cos($lat * $pi / 180);

		for $cand (@candidates) {
			($lat2, $lon2) = split(/,/, $cand);

			$latd = $lat2 - $lat;
			$lond = ($lon2 - $lon) * $rat;
			$d = sqrt($latd * $latd + $lond * $lond);

			if ($d < $bucket) {
				$d = int($d / $foot);

				for $radius ($theradius) {
					if ($d < 3 * $radius) {
						$weight = 1 / ($radius * sqrt(2 * $pi)) * exp(- ($d * $d) / (2 * $radius * $radius));

						# print STDERR "distance $distance weight $weight\n";

						for ($field = 2; $field <= 59; $field++) {
							$sum{$cand}{$field}{$radius} += $fields[$field - 1] * $weight;
							$state{$cand} = $fields[0];
						}
						$count{$cand}{$radius} += $weight;
					}
				}
			}
		}
	}
}

$seq = 0;
open(IN, "unzip -c sc121a_supp_txt.zip |");
while (<IN>) {
	chomp;
	@fields = split(/\t/);

	($lat, $lon) = ($fields[24], $fields[25]);
	$attendance = $fields[298];
	$faculty = $fields[44];

	if ($seq++ % 10000 == 0) {
		printf STDERR ("school %.2f\r", $seq / 102894 * 100);
	}

	next if ($attendance <= 0);

	$a = int($lat / $bucket);
	$o = int($lon / $bucket);

	@candidates = ();
	for ($aa = $a - 1; $aa <= $a + 1; $aa++) {
		for ($oo = $o - 1; $oo <= $o + 1; $oo++) {
			push @candidates, @{$near{$aa}{$oo}};
		}
	}

	if ($#candidates >= 0) {
		$rat = cos($lat * $pi / 180);

		for $cand (@candidates) {
			($lat2, $lon2) = split(/,/, $cand);

			$latd = $lat2 - $lat;
			$lond = ($lon2 - $lon) * $rat;
			$d = sqrt($latd * $latd + $lond * $lond);

			if ($d < $bucket) {
				$d = int($d / $foot);

				for $radius ($theradius) {
					if ($d < 3 * $radius) {
						$weight = 1 / ($radius * sqrt(2 * $pi)) * exp(- ($d * $d) / (2 * $radius * $radius));

						# print STDERR "distance $distance weight $weight\n";

						$sum{$cand}{62}{$radius} += $attendance * $weight;
						$sum{$cand}{63}{$radius} += $faculty * $weight;
					}
				}
			}
		}
	}
}

$seq = 0;
open(IN, "stops.csv");
while (<IN>) {
	chomp;
	@fields = split(/,/);

	($lat, $lon) = ($fields[0], $fields[1]);

	if ($seq++ % 10000 == 0) {
		printf STDERR ("stops %.2f\r", $seq / 141445 * 100);
	}

	$a = int($lat / $bucket);
	$o = int($lon / $bucket);

	@candidates = ();
	for ($aa = $a - 1; $aa <= $a + 1; $aa++) {
		for ($oo = $o - 1; $oo <= $o + 1; $oo++) {
			push @candidates, @{$near{$aa}{$oo}};
		}
	}

	if ($#candidates >= 0) {
		$rat = cos($lat * $pi / 180);

		for $cand (@candidates) {
			($lat2, $lon2) = split(/,/, $cand);

			$latd = $lat2 - $lat;
			$lond = ($lon2 - $lon) * $rat;
			$d = sqrt($latd * $latd + $lond * $lond);

			if ($d < $bucket) {
				$d = int($d / $foot);

				for $radius ($theradius) {
					if ($d < 3 * $radius) {
						$weight = 1 / ($radius * sqrt(2 * $pi)) * exp(- ($d * $d) / (2 * $radius * $radius));

						# print STDERR "distance $distance weight $weight\n";

						$sum{$cand}{64}{$radius} += $weight;
					}
				}
			}
		}
	}
}

for $where (sort(keys(%sum))) {
	next if ($walk{$where} == 0); # || $drive{$where} == 0);
	next if $state{$where} =~ /^25/; # massachusetts lehd broken

	printf("%d", $walk{$where});

	for $radius ($theradius) {
		for ($field = 2; $field <= 59; $field++) {
			printf(" %f", $sum{$where}{$field}{$radius});
		}

		printf(" %.16f", $count{$where}{$radius});
		printf(" %.5f", $split{$where});

		printf(" %f", $sum{$where}{62}{$radius});
		printf(" %f", $sum{$where}{63}{$radius});

		printf(" %.5f", $drive{$where});
		printf(" %.5f", $major{$where});
		printf(" %.5f", $minor{$where});
		printf(" %.3f", $fuzz{$where});
		printf(" %f", $sum{$where}{64}{$radius});

		print " $where $name{$where}";
	}

	printf("\n");
}
