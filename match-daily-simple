#!/usr/bin/perl

$pi = 4 * atan2(1, 1);
$foot = .00000274;
$bucket = 5280 * $foot;

$| = 1;

open(IN, "daily.csv");
while (<IN>) {
	chomp;
	($id, $name, $id2, $date, $time, @fields) = split(/,/);
	next if $fields[20] eq "";

	$lat = $fields[20];
	$lon = $fields[21];
	$walk = $fields[12] + $fields[13] + $fields[14] + $fields[15];

	$ns = $fields[0] + $fields[1] + $fields[2] + $fields[6] + $fields[7] + $fields[8];
	$ew = $fields[3] + $fields[4] + $fields[5] + $fields[9] + $fields[10] + $fields[11];

	$drive = $ns + $ew;

	if ($drive == 0) {
		$split = 0.75;
	} elsif ($ns > $ew) {
		$split = $ns / $drive;
	} else {
		$split = $ew / $drive;
	}

	next if $walk == 0;
	next if $drive == 0;

	$walk{"$lat,$lon"} += log($walk);
	$name{"$lat,$lon"} = $name;
	$walkcount{"$lat,$lon"} += 1;

	$split{"$lat,$lon"} = $split;
	$drive{"$lat,$lon"} = $drive;

	$a = int($lat / $bucket);
	$o = int($lon / $bucket);

	push @{$near{$a}{$o}}, "$lat,$lon";
}
close(IN);

# geometric mean if there are multiple reports for same location
for $w (keys(%walk)) {
	$walk{$w} = exp($walk{$w} / $walkcount{$w});
}

open(IN, "gzip -dc all-employment.gz |");
while (<IN>) {
	chomp;
	@fields = split(/,/);

	($lat, $lon) = ($fields[53], $fields[54]);

	$a = int($lat / $bucket);
	$o = int($lon / $bucket);

	@candidates = ();
	for ($aa = $a - 1; $aa <= $a + 1; $aa++) {
		for ($oo = $o - 1; $oo <= $o + 1; $oo++) {
			push @candidates, @{$near{$aa}{$oo}};
		}
	}

	if ($seq++ % 10000 == 0) {
		printf STDERR ("%.2f\r", $seq / 6595711 * 100);
	}

	if ($#candidates >= 0) {
		$rat = cos($lat * $pi / 180);

		for $cand (@candidates) {
			($lat2, $lon2) = split(/,/, $cand);

			$latd = $lat2 - $lat;
			$lond = ($lon2 - $lon) * $rat;
			$d = sqrt($latd * $latd + $lond * $lond);

			if ($d < $bucket) {
				$d = int($d / $foot);

				for $radius (1000) {
					if ($d < $radius) {
						$weight = 1;

						# print STDERR "distance $distance weight $weight\n";

						for ($field = 2; $field <= 59; $field++) {
							$sum{$cand}{$field}{$radius} += $fields[$field - 1] * $weight;
						}
						$count{$cand}{$radius} += $weight;
					}
				}
			}
		}
	}
}

$seq = 0;
open(IN, "unzip -c sc121a_supp_txt.zip |");
while (<IN>) {
	chomp;
	@fields = split(/\t/);

	($lat, $lon) = ($fields[24], $fields[25]);
	$attendance = $fields[298];
	$faculty = $fields[44];

	if ($seq++ % 10000 == 0) {
		printf STDERR ("school %.2f\r", $seq / 102894 * 100);
	}

	next if ($attendance <= 0);

	$a = int($lat / $bucket);
	$o = int($lon / $bucket);

	@candidates = ();
	for ($aa = $a - 1; $aa <= $a + 1; $aa++) {
		for ($oo = $o - 1; $oo <= $o + 1; $oo++) {
			push @candidates, @{$near{$aa}{$oo}};
		}
	}

	if ($#candidates >= 0) {
		$rat = cos($lat * $pi / 180);

		for $cand (@candidates) {
			($lat2, $lon2) = split(/,/, $cand);

			$latd = $lat2 - $lat;
			$lond = ($lon2 - $lon) * $rat;
			$d = sqrt($latd * $latd + $lond * $lond);

			if ($d < $bucket) {
				$d = int($d / $foot);

				for $radius (1000) {
					if ($d < $radius) {
						$weight = 1;

						# print STDERR "distance $distance weight $weight\n";

						$sum{$cand}{62}{$radius} += $attendance * $weight;
						$sum{$cand}{63}{$radius} += $faculty * $weight;
					}
				}
			}
		}
	}
}

for $where (sort(keys(%sum))) {
	printf("%d", $walk{$where});

	for $radius (1000) {
		for ($field = 2; $field <= 59; $field++) {
			printf(" %f", $sum{$where}{$field}{$radius});
		}

		printf(" %d", $count{$where}{$radius});
		printf(" %.5f", $split{$where});

		printf(" %f", $sum{$where}{62}{$radius});
		printf(" %f", $sum{$where}{63}{$radius});

		printf(" %.5f", $drive{$where});

		print " $where $name{$where}";
	}

	printf("\n");
}
