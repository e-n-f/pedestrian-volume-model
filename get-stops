#!/usr/bin/perl

use POSIX;

# for i in gtfs/*.zip; do ./get-stops <(unzip -p "$i" calendar.txt) <(unzip -p "$i" calendar_dates.txt) <(unzip -p "$i" stops.txt) <(unzip -p "$i" stop_times.txt); done > stops.csv

sub csv {
	my $line = $_[0];

	chomp $line;
	$line =~ s/\015//;

	my @ret = ();
	my $n = 0;
	my $quoted = 0;

	while ($line ne "") {
		if ($line =~ s/^""//) {
			$ret[$n] .= '"';
		} elsif ($line =~ s/^"//) {
			$quoted = !$quoted;
		} elsif ($line =~ s/^,//) {
			if ($quoted) {
				$ret[$n] .= ',';
			} else {
				$n++;
			}
		} else {
			$line =~ s/^([^",]*)//;
			$ret[$n] .= $1;
		}
	}

	for (my $i = 0; $i <= $#ret; $i++) {
		$ret[$i] =~ s/^ *//;
	}

	return @ret;
}

# print STDERR "Usage: $0 calendar.txt calendar_dates.txt stops.txt stop_times.txt\n";

$maxwhen = "";

open(IN, "$ARGV[0]");
$line = <IN>;
@fields = csv($line);
for ($i = 0; $i <= $#fields; $i++) {
	$col{$fields[$i]} = $i;
	# print "$fields[$i] $col{$fields[$i]}\n";
}
while (<IN>) {
	@fields = csv($_);
	$service_id = $fields[$col{'service_id'}];
	$start_date = $fields[$col{'start_date'}];
	$end_date = $fields[$col{'end_date'}];
	$wednesday = $fields[$col{'wednesday'}];

	if ($end_date =~ /(....)(..)(..)/) {
		$t = POSIX::mktime(0, 0, 12, $3, $2 - 1, $1 - 1900, -1, -1, -1);

		if ($t > time) {
			$t = time;
		}

		($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime($t);
		while ($wday != 3 && $wday != 3 - 7) {
			# printf("%d %d %d is %d\n", $year + 1900, $mon + 1, $mday, $wday);

			$wday--;
			$t -= 86400;
			($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime($t);
		}
		$when = sprintf("%04d%02d%02d", $year + 1900, $mon + 1, $mday);

		if ($when gt $maxwhen) {
			$maxwhen = $when;
		}
	} else {
		die "Don't know what to do with $end_date";
	}

	if ($wednesday) {
		$start_date{$service_id} = $start_date;
		$end_date{$service_id} = $end_date;
	}
}
close(IN);

open(IN, "$ARGV[1]"); # calendar_dates.txt
$line = <IN>;
@fields = csv($line);
for ($i = 0; $i <= $#fields; $i++) {
	$col{$fields[$i]} = $i;
	# print "$fields[$i] $col{$fields[$i]}\n";
}
while (<IN>) {
	@fields = csv($_);
	$service_id = $fields[$col{'service_id'}];
	$date = $fields[$col{'date'}];
	$exception_type = $fields[$col{'exception_type'}];

	if ($date =~ /(....)(..)(..)/) {
		$t = POSIX::mktime(0, 0, 12, $3, $2 - 1, $1 - 1900, -1, -1, -1);

		if ($t > time) {
			$t = time;
		}

		($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime($t);
		if ($wday == 3) {
			$when = sprintf("%04d%02d%02d", $year + 1900, $mon + 1, $mday);

			if ($when gt $maxwhen) {
				$maxwhen = $when;
			}

			if ($exception_type eq "1") {
				$date_add{$service_id}{$when} = 1;
			} elsif ($exception_type eq "2") {
				$date_sub{$service_id}{$when} = 1;
			} else {
				die "Don't know what to do with $exception_type";
			}
		}
	} else {
		die "Don't know what to do with $date";
	}
}
close(IN);

%dates = ();
for (keys(%start_date)) {
	$dates{$_} = 1;
}
for (keys(%date_add)) {
	$dates{$_} = 1;
}

@services = ();
for $service (keys(%dates)) {
	if (($maxwhen ge $start_date{$service} && $maxwhen le $end_date{$service} && $date_sub{$service}{$maxwhen} == 0) || $date_add{$service}{$maxwhen}) {
		push @services, $service;
		print STDERR "Keep $service for $maxwhen\n";
	} else {
		print STDERR "Exclude $service ($maxwhen not in $start_date{$service} to $end_date{$service})\n";
	}
}

exit(0);

$lat = -1;
$lon = -1;

$line = <>;
chomp $line;
@fields = csv($line);

for ($i = 0; $i <= $#fields; $i++) {
	if ($fields[$i] eq "stop_lat") {
		$lat = $i;
	} elsif ($fields[$i] eq "stop_lon") {
		$lon = $i;
	}
}

if ($lat < 0 || $lon < 0) {
	die "can't find lat/lon fields";
}

while (<>) {
	@fields = csv($_);

	print "$fields[$lat],$fields[$lon],1\n";
}
